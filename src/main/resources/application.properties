
server.port=9191
server.servlet.context-path=/api
# AWS & LOCAL database configuration
spring.datasource.url=jdbc:mysql://${RDS_HOSTNAME:localhost}:${RDS_PORT:3306}/${RDS_DB_NAME:tweet_app}
spring.datasource.username=${RDS_USERNAME:root}
spring.datasource.password=${RDS_PASSWORD:root}

#local db connection
#spring.datasource.url=jdbc:mysql://localhost:3306/tweet_app
#spring.datasource.username=root
#spring.datasource.password=root

#aws connection
#spring.datasource.url=jdbc:mysql://tweet-app-database-connection.c5g6xwie1muk.us-east-1.rds.amazonaws.com:3306/tweet_app
#spring.datasource.username=admin
#spring.datasource.password=admin1234
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

#jpa configuration

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#smtp configuration for mail service
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${DEVELOPER_EMAIL}
spring.mail.password=${APPLICATION_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html

#kafka config

#spring.kafka.consumer.bootstrap-servers= localhost:9093
#spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.IntegerDeserializer
#spring.kafka.consumer.group-id= user-group
#spring.kafka.consumer.auto-offset-reset=earliest
